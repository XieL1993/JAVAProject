<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaee.learning.dao02.mapper.UserMapper">
    <sql id="select">
        select * from user
    </sql>
    <insert id="insertUser" parameterType="user">
        <selectKey order="AFTER" keyProperty="uid" resultType="Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT into user VALUES (NULL ,#{userName},#{password})
    </insert>
    <resultMap id="userMap" type="user">
        <id column="uid" property="uid"></id>
        <result column="user_name" property="userName"></result>
        <result column="pass_word" property="passWord"></result>
    </resultMap>
    <select id="findAll" resultMap="userMap">
        <include refid="select"/>
        <where>
            <if test="name!=null and name != ''">
                and user_name = #{name}
            </if>
            <if test="password!=null and password != '' ">
                and pass_word = #{password}
            </if>
        </where>
    </select>
    <select id="findUserByIds" resultMap="userMap">
        <include refid="select"/>
        <where>
            <foreach collection="ids" item="id" separator="," open="uid in (" close=")">
                #{id}
            </foreach>
        </where>
    </select>
    <resultMap id="userMap2" type="user">
        <id column="uid" property="uid"></id>
        <result column="user_name" property="userName"></result>
        <result column="pass_word" property="passWord"></result>
        <collection property="orderList" ofType="Orders">
            <id property="oid" column="oid"></id>
            <result property="product" column="product"></result>
            <result property="price" column="price"></result>
        </collection>
    </resultMap>
    <select id="getUserAndOrders" resultMap="userMap2">
        SELECT u.uid,u.user_name,u.pass_word ,o.oid,o.product,o.price FROM USER u
        LEFT JOIN orders o ON u.uid=o.uid ORDER BY u.uid
    </select>
</mapper>